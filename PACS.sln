#include <iostream>
#include <fstream>
#include <string>
using namespace std;

class PACS {
public:
	PACS();//Constructor
	~PACS();//Deconstructor
	//Menu functions
	void ShowMenu();
	void CStore();
	void CFind();
	void CGet();
	void CEcho();
private:
	string filename;
};

void Beans(int *ptr);

int main()
{
	int a[5];

	int* b;
	b = new int[100];

	delete[] b;

	int* p = new int;
	*p = 5;
	cout << "*p " << *p << endl; //value
	cout << "&p " << &p << endl;//address

	Beans(p);

	PACS pacs;
	int k;
	//Call funtions based on user input
	do {
		pacs.ShowMenu();//Display prompt
		cin >> k;//Store user input
		switch (k) {
		case 1: pacs.CStore();
			break;
		case 2: pacs.CFind();
			break;
		case 3: pacs.CGet();
			break;
		case 4: pacs.CEcho();
			break;
		}
	} while (k != 5);
	exit(0);
}

void Beans(int *ptr) {
	cout << "ptr " << ptr << endl;//value
	cout << "&ptr " << &ptr << endl;//address
}

PACS::PACS() { //Default Constructor
	filename = "";

}

PACS::~PACS() {//Default Deconstructor

}
//Display prompt for user
void PACS::ShowMenu() {
	cout << " Welcome to PACS " << endl;
	cout << "[1] C-STORE" << endl;
	cout << "[2] C-FIND" << endl;
	cout << "[3] C-GET" << endl;
	cout << "[4] C-ECHO" << endl;
	cout << "[5] Exit the program" << endl;
	cout << "Enter choice [1-5]:" << endl;
}

void PACS::CStore() {
	string f;//Declare filename variable
	cout << "Enter filename to STORE" << endl; //Prompt user for filename
	cin >> f;//Store filename in f

	ofstream file(f);//Declare output file stream object to create new file
	if (file.is_open()) {//if the file is able to be created save file
		file << f;//write filename to file
		file.close();
		cout << "File STORED successfully [" << f << "]" << endl;
	}
	else
		cout << "Error writing file [" << f << "]" << endl;//if the file cannot be created display error quit

}
void PACS::CFind() {
	ifstream infile;//declare input file stream object to read files

	cout << "Please enter the input file name> " << flush;//prompt user for file they want to read
	string filein;//declare variable for filename
	cin >> filein; //store user input for filename
	infile.open(filein);//open file
	while (infile.fail( ))//if file can't be opened prompt user for another file
	{
		cout << "Invalid file. Please enter a valid input file name> \n";
		cin >> filein;
		infile.open (filein);
	}
	cout << "Input file opening is a success. \n";//if the file can be found display success quit
	infile.close();
}

void PACS::CGet() {
	ifstream infile;//declare input file stream object to read files
	string line;//declare variable for lines in the file
	cout << "Please enter the input file name> " << flush;//prompt user for file they want to open
	string filein;//declare variable for filename
	cin >> filein;//store user input for filename
	infile.open(filein, ios::binary);//open file in binary to ensure .img files are also readable
	if (infile.is_open())//if the file is able to be opened loop through lines and output them
	{
	while (getline(infile,line))
		{
			cout << line << '\n';
		}
	infile.close();//close file
	}
	else cout << "Unable to open file \n";//if the file can't be opened display error message
}

void PACS::CEcho() {
	cout << "Hello" << endl;//output "Hello"
}
